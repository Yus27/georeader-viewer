{"version":3,"sources":["components/DialogOpenRad.js","components/DialogRadParams.js","components/MainMenu.js","components/Rad.js","App.js","serviceWorker.js","index.js"],"names":["DialogOpenRad","props","setLoading","loading","setState","prevState","onFileChange","event","console","log","target","files","selectedFile","onFileUpload","a","state","data","formData","FormData","append","name","axios","post","res","status","alert","statusText","Stage","TimeBase","AntDist","DefaultV","GPRUnit","AntenName","Frequency","Data","length","Error","onOpenRad","btnCaption","this","Spinner","as","animation","size","role","aria-hidden","Form","Modal","show","onHide","onCancelOpenRad","Header","closeButton","Title","Body","File","id","onChange","Footer","Button","variant","onClick","disabled","React","Component","DialogRadParams","onCancelChangeParams","Group","Label","Control","type","value","params","onChangeStage","min","max","step","onChangeTimeBase","onChangeAntDist","onChangeDefaultV","onChangeGPRUnit","onChangeAntenName","onChangeFrequency","onChangeParams","MainMenu","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","className","onSelect","onSelectMenuElement","Link","eventKey","Plot","createPlotlyComponent","Plotly","Rad","z","layout","autosize","yaxis","autorange","title","text","xaxis","useResizeHandler","config","scrollZoom","responsive","style","width","height","App","selectedKey","isOpening","isChangingProperties","newData","oldData","isRad","newValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.309d3e27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"https://agile-escarpment-74931.herokuapp.com/\";\r\n// const API_URL = \"http://127.0.0.1:5000/\";\r\n\r\nclass DialogOpenRad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  setLoading = (loading) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        loading: loading,\r\n      };\r\n    });\r\n  };\r\n\r\n  onFileChange = (event) => {\r\n    console.log(\"onFileChange\");\r\n    if (event.target === null) return;\r\n    if (event.target.files == null) return;\r\n    const selectedFile = event.target.files[0];\r\n    // console.log(selectedFile);\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        selectedFile: selectedFile,\r\n      };\r\n    });\r\n  };\r\n\r\n  onFileUpload = async (event) => {\r\n    console.log(\"onFileUpload\");\r\n    let data;\r\n    if (this.state.selectedFile === null) {\r\n      data = null;\r\n    } else {\r\n      const formData = new FormData();\r\n      formData.append(\r\n        \"file\",\r\n        this.state.selectedFile,\r\n        this.state.selectedFile.name\r\n      );\r\n      this.setLoading(true);\r\n      const res = await axios.post(API_URL, formData);\r\n      console.log(res);\r\n      if (res.status !== 200) {\r\n        alert(res.statusText);\r\n        data = null;\r\n        this.setLoading(false);\r\n      } else {\r\n        console.log(typeof res.data);\r\n        data = res.data;\r\n        // data = JSON.parse(res.data);\r\n        console.log(data.Stage);\r\n        console.log(data.TimeBase);\r\n        console.log(data.AntDist);\r\n        console.log(data.DefaultV);\r\n        console.log(data.GPRUnit);\r\n        console.log(data.AntenName);\r\n        console.log(data.Frequency);\r\n        console.log(data.Data.length);\r\n        if (data.Error === null) {\r\n          this.setState((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              selectedFile: null,\r\n            };\r\n          });\r\n          this.props.onOpenRad(data);\r\n          this.setLoading(false);\r\n        } else {\r\n          alert(data.Error);\r\n          data = null;\r\n          this.setLoading(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const btnCaption = !this.state.loading ? (\r\n      \"Open\"\r\n    ) : (\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Form>\r\n        <Modal show={this.props.show} onHide={this.props.onCancelOpenRad}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Open GPR data</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.File id=\"rad-file\" onChange={this.onFileChange} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.props.onCancelOpenRad}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              disabled={this.state.selectedFile === null}\r\n              onClick={this.onFileUpload}\r\n            >\r\n              {btnCaption}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogOpenRad;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n//Rad = {\"Data\": None, \"Stage\": 1.0, \"TimeBase\": 512, \"AntDist\": 0, \"DefaultV\": 0.1, \"GPRUnit\": \"\", \"AntenName\": \"\",\"Frequency\": 1000, \"Error\": None}\r\n\r\nclass DialogRadParams extends React.Component {\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.onCancelChangeParams}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>GPR data properties</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Stage, m</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={this.props.params.Stage}\r\n                onChange={this.props.onChangeStage}\r\n                min={0.001}\r\n                max={10000}\r\n                step={1}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Timebase, ns</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={this.props.params.TimeBase}\r\n                onChange={this.props.onChangeTimeBase}\r\n                min={0.1}\r\n                max={100000}\r\n                step={0.5}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Antenna distance, m</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={this.props.params.AntDist}\r\n                onChange={this.props.onChangeAntDist}\r\n                min={0.0}\r\n                max={100}\r\n                step={0.1}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Default velocity, m/ns</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={this.props.params.DefaultV}\r\n                onChange={this.props.onChangeDefaultV}\r\n                min={0.0}\r\n                max={0.3}\r\n                step={0.001}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>GPR unit</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={this.props.params.GPRUnit}\r\n                onChange={this.props.onChangeGPRUnit}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Antenna name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={this.props.params.AntenName}\r\n                onChange={this.props.onChangeAntenName}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Central frequency, MHz</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={this.props.params.Frequency}\r\n                onChange={this.props.onChangeFrequency}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.props.onCancelChangeParams}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.props.onChangeParams}>\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogRadParams;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nclass MainMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\" onSelect={this.props.onSelectMenuElement}>\r\n            <Nav.Link disabled={false} eventKey=\"open\">Open</Nav.Link>\r\n            <Nav.Link disabled={false} eventKey=\"properties\">Properties</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from \"react\";\r\n\r\n// import Plot from 'react-plotly.js';\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nclass Rad extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.show && (\r\n          <Plot\r\n            show={this.props.show}\r\n            data={[\r\n              {\r\n                //x: [10, 20, 30],\r\n                //y: [10, 20, 30, 40, 50, 60, 70],\r\n                z: this.props.data.Data,\r\n                type: \"heatmap\",\r\n              },\r\n            ]}\r\n            layout={{\r\n              autosize: true,\r\n              yaxis: { autorange: \"reversed\", title: { text: \"Samples\" } },\r\n              xaxis: { title: { text: \"Traces\" } },\r\n            }}\r\n            useResizeHandler={true}\r\n            config={{\r\n              // displayModeBar: false,\r\n              scrollZoom: true,\r\n              responsive: true,\r\n            }}\r\n            style={{ width: \"100vw\", height: \"75vh\" }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rad;\r\n","import React, { Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport DialogOpenRad from \"./components/DialogOpenRad\";\nimport DialogRadParams from \"./components/DialogRadParams\";\nimport MainMenu from \"./components/MainMenu\";\nimport Rad from \"./components/Rad\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      isRad: false,\n      isOpening: false,\n      isChangingProperties: false,\n    };\n  }\n\n  onSelectMenuElement = (selectedKey) => {\n    console.log(\"onSelectMenuElement\");\n    switch (selectedKey) {\n      case \"open\":\n        this.setState((prevState) => {\n          return {\n            ...prevState,\n            isOpening: true,\n            isChangingProperties: false,\n          };\n        });\n        break;\n      case \"properties\":\n        this.setState((prevState) => {\n          return {\n            ...prevState,\n            isOpening: false,\n            isChangingProperties: this.state.data !== null,\n          };\n        });\n        break;\n      default:\n        console.log(\"default\");\n    }\n  };\n\n  onOpenRad = (data) => {\n    console.log(\"onOpenRad\");\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        isOpening: false,\n        isChangingProperties: data !== null,\n        data: data,\n      };\n    });\n  };\n\n  onCancelOpenRad = () => {\n    console.log(\"onCancelOpenRad\");\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        isOpening: false,\n        isChangingProperties: false,\n      };\n    });\n  };\n\n  onChangeParams = (params) => {\n    console.log(\"onChangeParams\");\n    const oldData = this.state.data;\n    let newData;\n    if (oldData === null) newData = null;\n    else newData = { ...oldData, ...params };\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        isOpening: false,\n        isChangingProperties: false,\n        data: newData,\n        isRad: newData !== null,\n      };\n    });\n  };\n\n  onCancelChangeParams = () => {\n    console.log(\"onCancelChangeParams\");\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        isOpening: false,\n        isChangingProperties: false,\n      };\n    });\n  };\n\n  onChangeStage = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, Stage: newValue };\n    });\n  };\n\n  onChangeTimeBase = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, data: {...prevState.data, TimeBase: newValue} };\n    });\n  };\n\n  onChangeAntDist = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, data: {...prevState.data, AntDist: newValue} };\n    });\n  };\n\n  onChangeDefaultV = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, data: {...prevState.data, DefaultV: newValue} };\n    });\n  };\n\n  onChangeGPRUnit = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, data: {...prevState.data, GPRUnit: newValue} };\n    });\n  };\n\n  onChangeAntenName = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, data: {...prevState.data, AntenName: newValue} };\n    });\n  };\n\n  onChangeFrequency = (event) => {\n    const newValue = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, data: {...prevState.data, Frequency: newValue} };\n    });\n  };\n\n  render() {\n    let params = {\n      Stage: 1.0,\n      TimeBase: 512.0,\n      AntDist: 0,\n      DefaultV: 0.1,\n      GPRUnit: \"\",\n      AntenName: \"\",\n      Frequency: 1000,\n    };\n    if (this.state.data !== null) {\n      params = this.state.data;\n    } \n\n    return (\n      <Fragment>\n        <MainMenu onSelectMenuElement={this.onSelectMenuElement} />\n        <DialogOpenRad\n          show={this.state.isOpening}\n          onOpenRad={this.onOpenRad}\n          onCancelOpenRad={this.onCancelOpenRad}\n        />\n        <DialogRadParams\n          show={this.state.isChangingProperties}\n          onChangeParams={this.onChangeParams}\n          onCancelChangeParams={this.onCancelChangeParams}\n          onChangeStage={this.onChangeStage}\n          onChangeTimeBase={this.onChangeTimeBase}\n          onChangeAntDist={this.onChangeAntDist}\n          onChangeDefaultV={this.onChangeDefaultV}\n          onChangeGPRUnit={this.onChangeGPRUnit}\n          onChangeAntenName={this.onChangeAntenName}\n          onChangeFrequency={this.onChangeFrequency}\n          params={params}\n        />\n        <Rad show={this.state.isRad} data={this.state.data} />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}